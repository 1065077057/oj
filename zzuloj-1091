/*郑州轻工业学院 1091 童年生活二三事（多实例测试）*/

/*
Description
Redraiment小时候走路喜欢蹦蹦跳跳，他最喜欢在楼梯上跳来跳去。 
但年幼的他一次只能走上一阶或者一下子蹦上两阶。 
现在一共有N阶台阶，请你计算一下Redraiment从第0阶到第N阶共有几种走法。

Input
输入包括多组数据。 
每组数据包括一行:N(1≤N≤40)。 
输入以0结束 

Output
对应每个输入包括一个输出。 
为redraiment到达第n阶不同走法的数量。

Sample Input
1
3
0

Sample Output
1
3
*/

/*
排列组合：
排列组合是组合学最基本的概念。
所谓排列，就是指从给定个数的元素中取出指定个数的元素进行排序。
组合则是指从给定个数的元素中仅仅取出指定个数的元素，不考虑排序。
A(上m,下n) = n!/(n-m)!
C(上m,下n) = n!/(m!(n-m)!)
*/

/*
题解：
实际上这个题使用斐波那契数列求解的。
思考方向是排列组合，使用组合确实可以得到正确答案。但是在一定情况下，
斐波那契数列跟排列组合有密不可分的关系。
与该题类似：
1.一枚均匀的硬币掷10次，问不连续出现正面的可能情形有多少种？
2.兔子繁殖问题。
在连续2次为周期的运算中可以使用组合，但是该组合在规律上与斐波那契李数列完全相同。
*/

/*代码（斐波那契数列）*/

import java.util.ArrayList;
import java.util.Scanner;

public class Main{
	public static int fab(int n){
		int[] a = new int[n+1];
		a[0] = 1;
		a[1] = 1;
		for(int i = 2;i <= n;i++){
			a[i] = a[i-1]+a[i-2];
		}
		return a[n];
	}

	public static void main(String[] args){
		Scanner input = new Scanner(System.in);
		ArrayList<Integer> arr = new ArrayList<Integer>();

		while(true){
			int n = input.nextInt();
			if(n == 0){
				break;
			}
			arr.add(n);
		}
		for(int i = 0;i < arr.size();i++){
			System.out.println(fab(arr.get(i)));
		}
	}
}
